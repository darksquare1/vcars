name: vcars-prod

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static-data:/home/app/web/static
      - media-data:/home/app/web/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
      - memcached
  asgiserver:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: daphne config.asgi:application -b 0.0.0.0 -p 9000
    volumes:
      - static-data:/home/app/web/static
      - media-data:/home/app/web/media
    env_file:
      - .env.prod
    links:
      - db
      - redis
      - memcached
  db:
    image: postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env.prod
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}

  memcached:
    image: memcached:1.6.21

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A celeryapp worker --loglevel=info
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
  celery_beat:
    build: .
    command: celery -A celeryapp beat -l info -s False
    depends_on:
      - redis
      - db
    env_file:
      - .env
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx.prod
    volumes:
      - static-data:/home/app/web/static
      - media-data:/home/app/web/media
    ports:
      - 80:80
    depends_on:
      - web
      - asgiserver
    command: sh -c "chmod 777 /home/app/web/static && nginx -g 'daemon off;'"

volumes:
  postgres-data:
  static-data:
  media-data: